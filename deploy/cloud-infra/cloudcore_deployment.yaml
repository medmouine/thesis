apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kubeedge
    kubeedge: cloudcore
  name: cloudcore
  namespace: kubeedge
spec:
  selector:
    matchLabels:
      k8s-app: kubeedge
      kubeedge: cloudcore
  template:
    metadata:
      labels:
        k8s-app: kubeedge
        kubeedge: cloudcore
    spec:
      hostNetwork: true
      containers:
        - name: cloudcore
          image: kubeedge/cloudcore:v1.14.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 10000
              name: cloudhub
              protocol: TCP
            - containerPort: 10001
              name: cloudhub-quic
              protocol: TCP
            - containerPort: 10002
              name: cloudhub-https
              protocol: TCP
            - containerPort: 10003
              name: cloudstream
              protocol: TCP
            - containerPort: 10004
              name: tunnelport
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          volumeMounts:
            - name: conf
              mountPath: /etc/kubeedge/config
            - name: certs
              mountPath: /etc/kubeedge
            - name: sock
              mountPath: /var/lib/kubeedge
          securityContext:
            privileged: true
      restartPolicy: Always
      serviceAccount: cloudcore
      serviceAccountName: cloudcore
      volumes:
        - name: conf
          configMap:
            name: cloudcore
        - name: certs
          hostPath:
            path: /etc/kubeedge
            type: DirectoryOrCreate
        - name: sock
          hostPath:
            path: /var/lib/kubeedge
            type: DirectoryOrCreate

---

apiVersion: v1
kind: Service
metadata:
  name: cloudcore
  namespace: kubeedge
  labels:
    k8s-app: kubeedge
    kubeedge: cloudcore
spec:
  ports:
  - port: 10000
    name: cloudhub
  - port: 10001
    name: cloudhub-quic
  - port: 10002
    name: cloudhub-https
  - port: 10003
    name: cloudstream
  - port: 10004
    name: tunnelport
  selector:
    k8s-app: kubeedge
    kubeedge: cloudcore
  type: LoadBalancer

wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.4/cri-dockerd_0.3.4.3-0.ubuntu-jammy_amd64.deb
tar zxf cri-dockerd-$VERSION.$ARCH.tgz
cp cri-dockerd/cri-dockerd /usr/local/bin/cri-dockerd

wget https://raw.githubusercontent.com/Mirantis/cri-dockerd/v0.3.4/packaging/systemd/cri-docker.service
wget https://raw.githubusercontent.com/Mirantis/cri-dockerd/v0.3.4/packaging/systemd/cri-docker.socket
cp cri-docker.service cri-docker.socket /etc/systemd/system/
sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service

systemctl daemon-reload
systemctl enable cri-docker.service
systemctl enable --now cri-docker.socket
