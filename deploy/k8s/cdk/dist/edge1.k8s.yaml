apiVersion: v1
kind: Namespace
metadata:
  labels:
    location: edge1
    tier: edge
  name: edge1
  namespace: edge1
spec: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: mapper
    location: edge1
    tier: edge
  name: mapper
  namespace: edge1
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: edge1-mapper-depl-c810af20
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: edge1-mapper-depl-c810af20
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: location
                    operator: In
                    values:
                      - edge1
      automountServiceAccountToken: false
      containers:
        - env:
            - name: DEVICE_LOCATION
              value: edge1
            - name: MQTT_BROKER_URL
              value: mqtt://edgebroker.edge1:1883
            - name: MQTT_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: MQTT_DATA_TOPIC
              value: edge1/sensor/mapper/+/temperature/data
            - name: MQTT_PUBLISH_INTERVAL
              value: 2s
            - name: MQTT_STATE_TOPICS
              value: edge1/sensor/mapper/+/state
            - name: MQTT_SUB_TOPICS
              value: edge1/sensor/mapper/+/state:edge1/sensor/mapper/+/temperature/data
            - name: SERVER_ADDR
              value: 0.0.0.0:3000
            - name: SERVER_HOST
              value: 0.0.0.0
            - name: SERVER_IDLE_TIMEOUT
              value: 120s
            - name: SERVER_PORT
              value: "3000"
            - name: SERVER_READ_TIMEOUT
              value: 5s
            - name: SERVER_WRITE_TIMEOUT
              value: 10s
            - name: STAGE_STATUS
              value: dev
          image: medmouine/mapper:latest
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 3000
          resources:
            limits:
              cpu: 1500m
              memory: 2048Mi
            requests:
              cpu: 1000m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: mapper
    location: edge1
    tier: edge
  name: mapper
  namespace: edge1
spec:
  externalIPs: []
  ports:
    - port: 3000
  selector:
    app.kubernetes.io/name: mapper
    location: edge1
  type: ClusterIP
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/instance: influxdb-edge1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: edge1-influxdb
    app.kubernetes.io/version: 2.3.0
    helm.sh/chart: influxdb2-2.1.1
    location: edge1
    tier: edge
  name: edge1-influxdb
  namespace: edge1
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: influxdb-edge1
      app.kubernetes.io/name: edge1-influxdb
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: influxdb-edge1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: edge1-influxdb
    app.kubernetes.io/version: 2.3.0
    helm.sh/chart: influxdb2-2.1.1
    location: edge1
    tier: edge
  name: edge1-influxdb
  namespace: edge1
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: influxdb-edge1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: edge1-influxdb
    app.kubernetes.io/version: 2.3.0
    helm.sh/chart: influxdb2-2.1.1
    location: edge1
    tier: edge
  name: edge1-influxdb-auth
  namespace: edge1
data:
  admin-password: aW5mbHV4X3B3
  admin-token: aW5mbHV4X3Rva2Vu
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: influxdb-edge1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: edge1-influxdb
    app.kubernetes.io/version: 2.3.0
    helm.sh/chart: influxdb2-2.1.1
    location: edge1
    tier: edge
  name: edge1-influxdb
  namespace: edge1
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8086
  selector:
    app.kubernetes.io/instance: influxdb-edge1
    app.kubernetes.io/name: edge1-influxdb
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: influxdb-edge1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: edge1-influxdb
    app.kubernetes.io/version: 2.3.0
    helm.sh/chart: influxdb2-2.1.1
    location: edge1
    tier: edge
  name: edge1-influxdb
  namespace: edge1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: influxdb-edge1
      app.kubernetes.io/name: edge1-influxdb
  serviceName: edge1-influxdb
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: influxdb-edge1
        app.kubernetes.io/name: edge1-influxdb
    spec:
      containers:
        - env:
            - name: DOCKER_INFLUXDB_INIT_MODE
              value: setup
            - name: DOCKER_INFLUXDB_INIT_USERNAME
              value: admin
            - name: DOCKER_INFLUXDB_INIT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: admin-password
                  name: edge1-influxdb-auth
            - name: DOCKER_INFLUXDB_INIT_ORG
              value: edge1-org
            - name: DOCKER_INFLUXDB_INIT_BUCKET
              value: sensor_data
            - name: DOCKER_INFLUXDB_INIT_RETENTION
              value: 0s
            - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  key: admin-token
                  name: edge1-influxdb-auth
            - name: INFLUXD_BOLT_PATH
              value: /var/lib/influxdb2/influxd.bolt
            - name: INFLUXD_ENGINE_PATH
              value: /var/lib/influxdb2
          image: influxdb:2.3.0-alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
          name: influxdb2
          ports:
            - containerPort: 8086
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/influxdb2
              name: data
      nodeSelector:
        location: edge1
        tier: edge
      serviceAccountName: edge1-influxdb
      volumes:
        - emptyDir: {}
          name: data
